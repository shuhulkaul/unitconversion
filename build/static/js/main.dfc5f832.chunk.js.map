{"version":3,"sources":["components/Formula.js","components/Units.js","components/Conversions.js","components/ErrorScreen.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["formula","type","unit","value","selectedUnit","mode","result","temp","type0","type1","type2","type3","type4","type5","type6","type7","type8","type9","type10","parseFloat","type11","toFixed","toLocaleString","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","marginTop","scrollBehavior","length","id","name","symbol","area","volume","mass","speed","time","force","pressure","energy","power","temperature","dataSize","Units","props","classes","data","index","changeResult","event","changeResultState","changeSelectedUnitState","React","useState","view","setView","handleChange","className","List","component","ListItem","button","ListItemIcon","onClick","ListItemText","style","color","fontWeight","textDecorationLine","textAlign","primary","ListItemSecondaryAction","IconButton","edge","aria-label","goBack","fontStyle","secondary","map","item","autoFocus","key","numberT","Conversions","showUnits","showUnitState","handleListItemClick","number","ErrorScreen","Alert","severity","modal","display","alignItems","justifyContent","paper","border","boxShadow","shadows","padding","spacing","Fade","forwardRef","ref","open","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","StyledTextField","withStyles","TextField","Home","num","setNum","setOpen","label","onChange","e","target","replace","variant","isNaN","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","href","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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,IACd,MACF,KAAK,EACHA,GAAc,KACd,MACF,KAAK,EACHA,GAAc,YACd,MACF,KAAK,EACHA,GAAc,UACd,MACF,KAAK,EACHA,GAAc,WACd,MACF,KAAK,EACHA,GAAc,WACd,MACF,KAAK,EACHA,GAAc,YACd,MACF,KAAK,GACHA,GAAc,WACd,MACF,KAAK,GACHA,GAAc,cAkcdI,GAKcT,GAEN,KAAK,EACHI,EAASC,EACT,MAGF,KAAK,EACHD,EAASC,EAAO,IAChB,MAGF,KAAK,EACHD,EAASC,EAAO,IAChB,MAGF,KAAK,EACHD,EAASC,EAAO,IAChB,MAEF,KAAK,EACHD,EAASC,EAAO,KAChB,MAGF,KAAK,EACHD,EAASC,EAAO,YAChB,MAGF,KAAK,EACHD,EAASC,EAAO,UAChB,MAGF,KAAK,EACHD,EAASC,EAAO,WAChB,MAEF,KAAK,EACHD,EAASC,EAAO,WAChB,MAGF,KAAK,EACHD,EAASC,EAAO,YAChB,MAEF,KAAK,GACHD,EAASC,EAAO,WAChB,MAEF,KAAK,GACHD,EAASC,EAAO,aAa5B,MAGF,KAAK,EAOK,OA3gBZ,WACE,OAAQH,GACN,KAAK,EACHG,GAAc,WACd,MACF,KAAK,EACHA,GAAc,MACd,MACF,KAAK,EACHA,GAAc,OACd,MACF,KAAK,EACHA,GAAc,YA0fdK,GAKcV,GAEN,KAAK,EACHI,EAASC,EACT,MAGF,KAAK,EACHD,EAASC,EAAO,WAChB,MAGF,KAAK,EACHD,EAASC,EAAO,MAChB,MAGF,KAAK,EACHD,EAASC,EAAO,OAChB,MAEF,KAAK,EACHD,EAASC,EAAO,WAa5B,MAGF,KAAK,EAOK,OAniBZ,WACE,OAAQH,GACN,KAAK,EACHG,GAAc,IACd,MACF,KAAK,EACHA,GAAc,IACd,MACF,KAAK,EACHA,GAAc,IACd,MACF,KAAK,EACHA,GAAc,KACd,MACF,KAAK,EACHA,GAAc,MACd,MACF,KAAK,EACHA,GAAc,OACd,MACF,KAAK,EACHA,GAAc,QACd,MACF,KAAK,EACHA,GAAc,UACd,MACF,KAAK,EACHA,GAAc,YAmgBdM,GAKcX,GAEN,KAA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","file":"static/js/main.dfc5f832.chunk.js","sourcesContent":["var formula = function (type, unit, value, selectedUnit, mode) {\r\n  // console.log(type);\r\n  // console.log(unit);\r\n  // console.log(value);\r\n  // console.log(selectedUnit);\r\n  var result = value;\r\n  var temp = value;\r\n  var units = 0;\r\n  //distance\r\n  function type0() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 10000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 1000000000;\r\n        break;\r\n      case 5:\r\n        temp = temp * 25.4;\r\n        break;\r\n      case 6:\r\n        temp = temp * 25400;\r\n        break;\r\n      case 7:\r\n        temp = temp * 304800;\r\n        break;\r\n      case 8:\r\n        temp = temp * 914400;\r\n        break;\r\n      case 9:\r\n        temp = temp * 1609344000;\r\n        break;\r\n      case 10:\r\n        temp = temp * 1852000000;\r\n        break;\r\n      case 11:\r\n        temp = temp * 1828800;\r\n        break;\r\n      case 12:\r\n        temp = temp * 20116800;\r\n        break;\r\n      case 13:\r\n        temp = temp * 201168000;\r\n        break;\r\n      case 14:\r\n        temp = temp * 9460730473000000000000;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //area\r\n  function type1() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 100;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 10000000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 1000000000000;\r\n        break;\r\n      case 5:\r\n        temp = temp * 645.16;\r\n        break;\r\n      case 6:\r\n        temp = temp * 92903.04;\r\n        break;\r\n      case 7:\r\n        temp = temp * 836127.36;\r\n        break;\r\n      case 8:\r\n        temp = temp * 4046856422;\r\n        break;\r\n      case 9:\r\n        temp = temp * 2589988110000;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //volume\r\n  function type2() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 16.387064;\r\n        break;\r\n      case 4:\r\n        temp = temp * 28316.84659;\r\n        break;\r\n      case 5:\r\n        temp = temp * 764554.858;\r\n        break;\r\n      case 6:\r\n        temp = temp * 28.4130625;\r\n        break;\r\n      case 7:\r\n        temp = temp * 568.26125;\r\n        break;\r\n      case 8:\r\n        temp = temp * 4546.09;\r\n        break;\r\n      case 9:\r\n        temp = temp * 29.57352956;\r\n        break;\r\n      case 10:\r\n        temp = temp * 473.176473;\r\n        break;\r\n      case 11:\r\n        temp = temp * 3785.411784;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //mass\r\n  function type3() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1000000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 1000000000000;\r\n        break;\r\n      case 5:\r\n        temp = temp * 28349523.13;\r\n        break;\r\n      case 6:\r\n        temp = temp * 453592370;\r\n        break;\r\n      case 7:\r\n        temp = temp * 6350293180;\r\n        break;\r\n      case 8:\r\n        temp = temp * 45359237000;\r\n        break;\r\n      case 9:\r\n        temp = temp * 50802345440;\r\n        break;\r\n      case 10:\r\n        temp = temp * 907184740000;\r\n        break;\r\n      case 11:\r\n        temp = temp * 1016046909000;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  //speed\r\n  function type4() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 0.277777778;\r\n        break;\r\n      case 2:\r\n        temp = temp * 0.3048;\r\n        break;\r\n      case 3:\r\n        temp = temp * 0.44704;\r\n        break;\r\n      case 4:\r\n        temp = temp * 0.514444444;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  //time\r\n  function type5() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1000000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 60000000000;\r\n        break;\r\n      case 5:\r\n        temp = temp * 3600000000000;\r\n        break;\r\n      case 6:\r\n        temp = temp * 86400000000000;\r\n        break;\r\n      case 7:\r\n        temp = temp * 604800000000000;\r\n        break;\r\n      case 8:\r\n        temp = temp * 31557600000000000;\r\n        break;\r\n      case 9:\r\n        temp = temp * 31556952000000000;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //force\r\n  function type6() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1000000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 9806650;\r\n        break;\r\n      case 5:\r\n        temp = temp * 4448221.62;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //time\r\n  function type7() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 100;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 100;\r\n        break;\r\n      case 5:\r\n        temp = temp * 100000;\r\n        break;\r\n      case 6:\r\n        temp = temp * 101325;\r\n        break;\r\n      case 7:\r\n        temp = temp * 98066.5;\r\n        break;\r\n      case 8:\r\n        temp = temp * 6894.75729;\r\n        break;\r\n      case 9:\r\n        temp = temp * 3386.389;\r\n        break;\r\n      case 10:\r\n        temp = temp * 133.3223684;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //Energy\r\n  function type8() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 3600000;\r\n        break;\r\n      case 4:\r\n        temp = temp * 4.1868;\r\n        break;\r\n      case 5:\r\n        temp = temp * 4186.8;\r\n        break;\r\n      case 6:\r\n        temp = temp * 1055.055853;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //Power\r\n  function type9() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 3:\r\n        temp = temp * 4.1868;\r\n        break;\r\n      case 4:\r\n        temp = temp * 0.29307107;\r\n        break;\r\n      case 5:\r\n        temp = temp * 745.699872;\r\n        break;\r\n      case 6:\r\n        temp = temp * 735.49875;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //Temprature\r\n  function type10() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = ((temp - 32) * 5) / 9;\r\n        break;\r\n      case 2:\r\n        temp = temp - 273.15;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  //data\r\n  function type11() {\r\n    switch (selectedUnit) {\r\n      case 1:\r\n        temp = temp * 1024;\r\n        break;\r\n      case 2:\r\n        temp = temp * 1048576;\r\n        break;\r\n      case 3:\r\n        temp = temp * 1073741824;\r\n        break;\r\n      case 4:\r\n        temp = temp * 1099511628000;\r\n        break;\r\n      case 5:\r\n        temp = temp * 1000;\r\n        break;\r\n      case 6:\r\n        temp = temp * 1000000;\r\n        break;\r\n      case 7:\r\n        temp = temp * 1000000000;\r\n        break;\r\n      case 8:\r\n        temp = temp * 1000000000000;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  switch (type) {\r\n    //distance\r\n    case 0:\r\n      {\r\n        type0();\r\n        switch (units) {\r\n          //Microns\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //Microns\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n\r\n                //Millimeter\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n\r\n                //Centimeter\r\n                case 2:\r\n                  result = temp / 10000;\r\n                  break;\r\n\r\n                //Meter\r\n                case 3:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //Kilometer\r\n                case 4:\r\n                  result = temp / 1000000000;\r\n                  break;\r\n\r\n                //Mils/Thou\r\n                case 5:\r\n                  result = temp / 25.4;\r\n                  break;\r\n\r\n                //Inches\r\n                case 6:\r\n                  result = temp / 25400;\r\n                  break;\r\n\r\n                //Feet\r\n                case 7:\r\n                  result = temp / 304800;\r\n                  break;\r\n                //Yard\r\n                case 8:\r\n                  result = temp / 914400;\r\n                  break;\r\n\r\n                //Miles\r\n                case 9:\r\n                  result = temp / 1609344497.89;\r\n                  break;\r\n                //Nautical Miles\r\n                case 10:\r\n                  result = temp / 1851999325.87;\r\n                  break;\r\n                //Fathoms\r\n                case 11:\r\n                  result = temp / 1828798.82;\r\n                  break;\r\n                //Chains\r\n                case 12:\r\n                  result = temp / 20116798.12;\r\n                  break;\r\n                //Furlongs\r\n                case 13:\r\n                  result = temp / 201168385.98;\r\n                  break;\r\n                //Light Years\r\n                case 14:\r\n                  result = temp * 0.0000000000000000000001057;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Area\r\n    case 1:\r\n      {\r\n        type1();\r\n        switch (units) {\r\n          //sq mil\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //sq mil\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n\r\n                //sq cm\r\n                case 1:\r\n                  result = temp / 100;\r\n                  break;\r\n\r\n                //sq m\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n\r\n                //hectares\r\n                case 3:\r\n                  result = temp / 10000000000;\r\n                  break;\r\n                //sq km\r\n                case 4:\r\n                  result = temp / 1000000000000;\r\n                  break;\r\n\r\n                //sq in\r\n                case 5:\r\n                  result = temp / 645.16;\r\n                  break;\r\n\r\n                //sq ft\r\n                case 6:\r\n                  result = temp / 92903.04;\r\n                  break;\r\n\r\n                //sq yd\r\n                case 7:\r\n                  result = temp / 836127.36;\r\n                  break;\r\n                //acres\r\n                case 8:\r\n                  result = temp / 4046856422;\r\n                  break;\r\n\r\n                //sq miles\r\n                case 9:\r\n                  result = temp / 2589988110000;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Volume\r\n    case 2:\r\n      {\r\n        type2();\r\n        switch (units) {\r\n          //Millilitres cc\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //millilitres cc\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n\r\n                //litres\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n\r\n                //cu. m\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n\r\n                //cu. in\r\n                case 3:\r\n                  result = temp / 16.387064;\r\n                  break;\r\n                //cu ft.\r\n                case 4:\r\n                  result = temp / 28316.84659;\r\n                  break;\r\n\r\n                //cu yd\r\n                case 5:\r\n                  result = temp / 764554.858;\r\n                  break;\r\n\r\n                //fluid ounce\r\n                case 6:\r\n                  result = temp / 28.4130625;\r\n                  break;\r\n\r\n                //pt imp\r\n                case 7:\r\n                  result = temp / 568.26125;\r\n                  break;\r\n                //gal imp\r\n                case 8:\r\n                  result = temp / 4546.09;\r\n                  break;\r\n\r\n                //fl oz\r\n                case 9:\r\n                  result = temp / 29.57352956;\r\n                  break;\r\n                //pt us\r\n                case 10:\r\n                  result = temp / 473.176473;\r\n                  break;\r\n                //gal us\r\n                case 11:\r\n                  result = temp / 3785.411784;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Mass\r\n    case 3:\r\n      {\r\n        type3();\r\n        switch (units) {\r\n          //Micrograms\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //micrograms\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n\r\n                //milligrams\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n\r\n                //grams\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n\r\n                //kilograms\r\n                case 3:\r\n                  result = temp / 1000000000;\r\n                  break;\r\n                //tonnes\r\n                case 4:\r\n                  result = temp / 1000000000000;\r\n                  break;\r\n\r\n                //ounces\r\n                case 5:\r\n                  result = temp / 28349523.13;\r\n                  break;\r\n\r\n                //pounds\r\n                case 6:\r\n                  result = temp / 453592370;\r\n                  break;\r\n\r\n                //stone\r\n                case 7:\r\n                  result = temp / 6350293180;\r\n                  break;\r\n                //Hundredweight us\r\n                case 8:\r\n                  result = temp / 45359237000;\r\n                  break;\r\n\r\n                //Hundredweight uk\r\n                case 9:\r\n                  result = temp / 50802345440;\r\n                  break;\r\n                //short tons us\r\n                case 10:\r\n                  result = temp / 907184740000;\r\n                  break;\r\n                //long tons uk\r\n                case 11:\r\n                  result = temp / 1016046909000;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n\r\n    //Speed\r\n    case 4:\r\n      {\r\n        type4();\r\n        switch (units) {\r\n          //mps\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //mps\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n\r\n                //kmph\r\n                case 1:\r\n                  result = temp / 0.277777778;\r\n                  break;\r\n\r\n                //ftps\r\n                case 2:\r\n                  result = temp / 0.3048;\r\n                  break;\r\n\r\n                //mph\r\n                case 3:\r\n                  result = temp / 0.44704;\r\n                  break;\r\n                //kt\r\n                case 4:\r\n                  result = temp / 0.514444444;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n\r\n    //Time\r\n    case 5:\r\n      {\r\n        type5();\r\n        switch (units) {\r\n          //ns\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //ns\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //microsec\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //millisec\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //sec\r\n                case 3:\r\n                  result = temp / 1000000000;\r\n                  break;\r\n                //min\r\n                case 4:\r\n                  result = temp / 60000000000;\r\n                  break;\r\n                //hr\r\n                case 5:\r\n                  result = temp / 3600000000000;\r\n                  break;\r\n                //days\r\n                case 6:\r\n                  result = temp / 86400000000000;\r\n                  break;\r\n                //wk\r\n                case 7:\r\n                  result = temp / 604800000000000;\r\n                  break;\r\n                //yr gregorian\r\n                case 8:\r\n                  result = temp / 31557600000000000;\r\n                  break;\r\n                //years julian\r\n                case 9:\r\n                  result = temp / 31556952000000000;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Force\r\n    case 6:\r\n      {\r\n        type6();\r\n        switch (units) {\r\n          //microN\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //microN\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //milliN\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //N\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //kN\r\n                case 3:\r\n                  result = temp / 1000000000;\r\n                  break;\r\n                //kgf\r\n                case 4:\r\n                  result = temp / 9806650;\r\n                  break;\r\n                //lbf\r\n                case 5:\r\n                  result = temp / 4448221.62;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Pressure\r\n    case 7:\r\n      {\r\n        type7();\r\n        switch (units) {\r\n          //pascal\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //pascal\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //hectopascal\r\n                case 1:\r\n                  result = temp / 100;\r\n                  break;\r\n                //kilopascal\r\n                case 2:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //megapascal\r\n                case 3:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //millibar\r\n                case 4:\r\n                  result = temp / 100;\r\n                  break;\r\n                //bar\r\n                case 5:\r\n                  result = temp / 100000;\r\n                  break;\r\n                //atm\r\n                case 6:\r\n                  result = temp / 101325;\r\n                  break;\r\n                //kg per sq cm\r\n                case 7:\r\n                  result = temp / 98066.5;\r\n                  break;\r\n                //kg per sq in\r\n                case 8:\r\n                  result = temp / 6894.75729;\r\n                  break;\r\n                //in hg\r\n                case 9:\r\n                  result = temp / 3386.389;\r\n                  break;\r\n                //Torr\r\n                case 10:\r\n                  result = temp / 133.3223684;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Energy\r\n    case 8:\r\n      {\r\n        type8();\r\n        switch (units) {\r\n          //Joules\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //joules\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //kJ\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //MJ\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //kWh\r\n                case 3:\r\n                  result = temp / 3600000;\r\n                  break;\r\n                //cal\r\n                case 4:\r\n                  result = temp / 4.1868;\r\n                  break;\r\n                //kcal\r\n                case 5:\r\n                  result = temp / 4186.8;\r\n                  break;\r\n                //BTU\r\n                case 6:\r\n                  result = temp / 1055.055853;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Energy\r\n    case 9:\r\n      {\r\n        type9();\r\n        switch (units) {\r\n          //Watts\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //watts\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //kW\r\n                case 1:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //MW\r\n                case 2:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //cal/s\r\n                case 3:\r\n                  result = temp / 4.1868;\r\n                  break;\r\n                //BTUph\r\n                case 4:\r\n                  result = temp / 0.29307107;\r\n                  break;\r\n                //hp I\r\n                case 5:\r\n                  result = temp / 745.699872;\r\n                  break;\r\n                //hp M\r\n                case 6:\r\n                  result = temp / 735.49875;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Temprature\r\n    case 10:\r\n      {\r\n        type10();\r\n        switch (units) {\r\n          //Celcius\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //C\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //F\r\n                case 1:\r\n                  result = (temp * 9) / 5 + 32;\r\n                  break;\r\n                //K\r\n                case 2:\r\n                  result = parseFloat(temp) + 273.15;\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    //Data\r\n    case 11:\r\n      {\r\n        type11();\r\n        switch (units) {\r\n          //Bytes\r\n          case 0:\r\n            {\r\n              switch (unit) {\r\n                //bytes\r\n                case 0:\r\n                  result = temp;\r\n                  break;\r\n                //Kibi\r\n                case 1:\r\n                  result = temp / 1024;\r\n                  break;\r\n                //Mebi\r\n                case 2:\r\n                  result = temp / 1048576;\r\n                  break;\r\n                //Gibi\r\n                case 3:\r\n                  result = temp / 1073741824;\r\n                  break;\r\n                //Tebi\r\n                case 4:\r\n                  result = temp / 1099511628000;\r\n                  break;\r\n                //Kilo\r\n                case 5:\r\n                  result = temp / 1000;\r\n                  break;\r\n                //Mega\r\n                case 6:\r\n                  result = temp / 1000000;\r\n                  break;\r\n                //Giga\r\n                case 7:\r\n                  result = temp / 1000000000;\r\n                  break;\r\n                //Tera\r\n                case 8:\r\n                  result = temp / 1000000000000;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  if (selectedUnit === unit) {\r\n    result = value;\r\n  }\r\n  if (mode) {\r\n    if(result < 1)\r\n    return result.toFixed(23);\r\n    else\r\n    return result.toLocaleString('en');\r\n  } else {\r\n    return result;\r\n  }\r\n};\r\nexport default formula;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport formula from \"./Formula.js\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 340,\r\n    maxWidth: 350,\r\n    backgroundColor: \"#f9f7d9\",\r\n    marginTop: 15,\r\n    scrollBehavior: true,\r\n  },\r\n}));\r\n\r\nlet length = [\r\n  { id: 0, name: \"Microns\", symbol: \"μm\" },\r\n  { id: 1, name: \"Millimeter\", symbol: \"mm\" },\r\n  { id: 2, name: \"Centimeters\", symbol: \"cm\" },\r\n  { id: 3, name: \"Meters\", symbol: \"m\" },\r\n  { id: 4, name: \"Kilometers\", symbol: \"km\" },\r\n  { id: 5, name: \"Mils/Thou\", symbol: \"mil\" },\r\n  { id: 6, name: \"Inches\", symbol: \"in\" },\r\n  { id: 7, name: \"Feet\", symbol: \"ft\" },\r\n  { id: 8, name: \"Yards\", symbol: \"yd\" },\r\n  { id: 9, name: \"Miles\", symbol: \"mi\" },\r\n  { id: 10, name: \"Nautical Miles\", symbol: \"nm\" },\r\n  { id: 11, name: \"Fathoms\", symbol: \"fm\" },\r\n  { id: 12, name: \"Chains\", symbol: \"ch\" },\r\n  { id: 13, name: \"Furlongs\", symbol: \"fur\" },\r\n  { id: 14, name: \"Light Years\", symbol: \"ly\" },\r\n];\r\nlet area = [\r\n  { id: 0, name: \"Sq. Millimeters\", symbol: \"mm²\" },\r\n  { id: 1, name: \"Sq. Centimeters\", symbol: \"cm²\" },\r\n  { id: 2, name: \"Sq. Meters\", symbol: \"m²\" },\r\n  { id: 3, name: \"Hectares\", symbol: \"ha\" },\r\n  { id: 4, name: \"Sq. Kilometers\", symbol: \"km²\" },\r\n  { id: 5, name: \"Sq. Inces\", symbol: \"sq mi\" },\r\n  { id: 6, name: \"Sq. Feet\", symbol: \"sq ft\" },\r\n  { id: 7, name: \"Sq. Yard\", symbol: \"sq yd\" },\r\n  { id: 8, name: \"Acres\", symbol: \"ac\" },\r\n  { id: 9, name: \"Sq. Miles\", symbol: \"sq mi\" },\r\n];\r\nlet volume = [\r\n  { id: 0, name: \"Millilitres (cc)\", symbol: \"ml\" },\r\n  { id: 1, name: \"Litres\", symbol: \"l\" },\r\n  { id: 2, name: \"Cu. Meters\", symbol: \"m³\" },\r\n  { id: 3, name: \"Cu. Inches\", symbol: \"cu in\" },\r\n  { id: 4, name: \"Cu Feet\", symbol: \"cu ft\" },\r\n  { id: 5, name: \"Cu Yards\", symbol: \"cu yd\" },\r\n  { id: 6, name: \"Fluid Ounce (Imp)\", symbol: \"fl oz (Imp)\" },\r\n  { id: 7, name: \"Pint (Imp)\", symbol: \"pt\" },\r\n  { id: 8, name: \"Gallon (Imp)\", symbol: \"gal (Imp)\" },\r\n  { id: 9, name: \"Fluid Ounce (US)\", symbol: \"fl oz (US)\" },\r\n  { id: 10, name: \"Pint (US)\", symbol: \"pt (US)\" },\r\n  { id: 11, name: \"Gallon (US)\", symbol: \"gal (US)\" },\r\n];\r\nlet mass = [\r\n  { id: 0, name: \"Micrograms\", symbol: \"μg\" },\r\n  { id: 1, name: \"Milligrams\", symbol: \"mg\" },\r\n  { id: 2, name: \"Grams\", symbol: \"g\" },\r\n  { id: 3, name: \"Kilograms\", symbol: \"kg\" },\r\n  { id: 4, name: \"Tonnes\", symbol: \"t\" },\r\n  { id: 5, name: \"Ounces\", symbol: \"oz\" },\r\n  { id: 6, name: \"Pounds\", symbol: \"lb\" },\r\n  { id: 7, name: \"Stone\", symbol: \"st\" },\r\n  { id: 8, name: \"Hundredweight (US)\", symbol: \"cwt (US)\" },\r\n  { id: 9, name: \"Hundredweight (UK)\", symbol: \"cwt (UK)\" },\r\n  { id: 10, name: \"Short Tons (US)\", symbol: \"ton (US)\" },\r\n  { id: 11, name: \"Long Tons (US)\", symbol: \"ton (US)\" },\r\n];\r\nlet speed = [\r\n  { id: 0, name: \"Meters per second\", symbol: \"m/s\" },\r\n  { id: 1, name: \"Kilometers per hour\", symbol: \"km/h\" },\r\n  { id: 2, name: \"Feet per second\", symbol: \"ft/s\" },\r\n  { id: 3, name: \"Miles per hour\", symbol: \"mph\" },\r\n  { id: 4, name: \"Knots\", symbol: \"kt\" },\r\n];\r\nlet time = [\r\n  { id: 0, name: \"Nanoseconds\", symbol: \"ns\" },\r\n  { id: 1, name: \"Microseconds\", symbol: \"μg\" },\r\n  { id: 2, name: \"Milliseconds\", symbol: \"ms\" },\r\n  { id: 3, name: \"Seconds\", symbol: \"s\" },\r\n  { id: 4, name: \"Minutes\", symbol: \"min\" },\r\n  { id: 5, name: \"Hours\", symbol: \"h\" },\r\n  { id: 6, name: \"Days\", symbol: \"d\" },\r\n  { id: 7, name: \"Weeks\", symbol: \"wk\" },\r\n  { id: 8, name: \"Years (Gregorian)\", symbol: \"yr\" },\r\n  { id: 9, name: \"Years (Julian)\", symbol: \"yrj\" },\r\n];\r\nlet force = [\r\n  { id: 0, name: \"Micronewtons\", symbol: \"μN\" },\r\n  { id: 1, name: \"Millinewtons\", symbol: \"mN\" },\r\n  { id: 2, name: \"Newtons\", symbol: \"N\" },\r\n  { id: 3, name: \"Kilonewtons\", symbol: \"kN\" },\r\n  { id: 4, name: \"Kilogram-Force\", symbol: \"kgf\" },\r\n  { id: 5, name: \"Pound-Force\", symbol: \"lbf\" },\r\n];\r\nlet pressure = [\r\n  { id: 0, name: \"Pascal\", symbol: \"Pa\" },\r\n  { id: 1, name: \"Hectopascal\", symbol: \"hPa\" },\r\n  { id: 2, name: \"Kilopascal\", symbol: \"kPa\" },\r\n  { id: 3, name: \"Megapascal\", symbol: \"MPa\" },\r\n  { id: 4, name: \"Millibar\", symbol: \"mbar\" },\r\n  { id: 5, name: \"Bar\", symbol: \"bar\" },\r\n  { id: 6, name: \"Atmosphere (std)\", symbol: \"atm\" },\r\n  { id: 7, name: \"Kilogram per sq. cm\", symbol: \"kg/cm²\" },\r\n  { id: 8, name: \"Pounds per sq. inch\", symbol: \"psi\" },\r\n  { id: 9, name: \"Inches of Mercury (Hg)\", symbol: \"In Hg\" },\r\n  { id: 10, name: \"Torr\", symbol: \"Torr\" },\r\n];\r\nlet energy = [\r\n  { id: 0, name: \"Joules\", symbol: \"J\" },\r\n  { id: 1, name: \"Kilojoules\", symbol: \"kJ\" },\r\n  { id: 2, name: \"Megajoules\", symbol: \"MJ\" },\r\n  { id: 3, name: \"Kilowatt-Hours\", symbol: \"kWh\" },\r\n  { id: 4, name: \"Calories\", symbol: \"cal\" },\r\n  { id: 5, name: \"Kilocalories\", symbol: \"kcal\" },\r\n  { id: 6, name: \"British Thermal Units\", symbol: \"BTU\" },\r\n];\r\nlet power = [\r\n  { id: 0, name: \"Watts\", symbol: \"W\" },\r\n  { id: 1, name: \"Kilowatts\", symbol: \"kW\" },\r\n  { id: 2, name: \"Megawatts\", symbol: \"MW\" },\r\n  { id: 3, name: \"Calories per sec\", symbol: \"cal/s\" },\r\n  { id: 4, name: \"BTUs per hour\", symbol: \"BTU/h\" },\r\n  { id: 5, name: \"Horsepower (mech)\", symbol: \"hp(I)\" },\r\n  { id: 6, name: \"Horsepower (metric)\", symbol: \"hp(M)\" },\r\n];\r\nlet temperature = [\r\n  { id: 0, name: \"Celsius\", symbol: \"°C\" },\r\n  { id: 1, name: \"Fahrenheit\", symbol: \"°F\" },\r\n  { id: 2, name: \"Kelvin\", symbol: \" K\" },\r\n];\r\nlet dataSize = [\r\n  { id: 0, name: \"Bytes\", symbol: \"B\" },\r\n  { id: 1, name: \"Kibibytes\", symbol: \"KiB\" },\r\n  { id: 2, name: \"Mebibytes\", symbol: \"MiB\" },\r\n  { id: 3, name: \"Gibibytes\", symbol: \"GiB\" },\r\n  { id: 4, name: \"Tebibytes\", symbol: \"TiB\" },\r\n  { id: 5, name: \"Kilobytes\", symbol: \"kB\" },\r\n  { id: 6, name: \"Megabytes\", symbol: \"MB\" },\r\n  { id: 7, name: \"Gigabytes\", symbol: \"GB\" },\r\n  { id: 8, name: \"Terabytes\", symbol: \"TB\" },\r\n];\r\nexport default function Units(props) {\r\n  const classes = useStyles();\r\n  let data = [];\r\n  switch (props.index) {\r\n    case 0:\r\n      data = length;\r\n      break;\r\n    case 1:\r\n      data = area;\r\n      break;\r\n    case 2:\r\n      data = volume;\r\n      break;\r\n    case 3:\r\n      data = mass;\r\n      break;\r\n    case 4:\r\n      data = speed;\r\n      break;\r\n    case 5:\r\n      data = time;\r\n      break;\r\n    case 6:\r\n      data = force;\r\n      break;\r\n    case 7:\r\n      data = pressure;\r\n      break;\r\n    case 8:\r\n      data = energy;\r\n      break;\r\n    case 9:\r\n      data = power;\r\n      break;\r\n    case 10:\r\n      data = temperature;\r\n      break;\r\n    case 11:\r\n      data = dataSize;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const changeResult = (event, index, id) => {\r\n    changeResultState(index);\r\n    changeSelectedUnitState(id);\r\n  };\r\n  const [view, setView] = React.useState(false);\r\n  const handleChange = () => {\r\n    setView(!view);\r\n    // console.log(view);\r\n  };\r\n  const [result, changeResultState] = React.useState(0);\r\n  const [selectedUnit, changeSelectedUnitState] = React.useState(\"\");\r\n  // const currentData = length[props.index];\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\">\r\n        {result ? (\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ArrowBackIcon onClick={(event) => changeResult(event, 0, \"\")} />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText\r\n              style={{\r\n                color: \"#ee6f57\",\r\n                fontWeight: \"bold\",\r\n                textDecorationLine: \"underline\",\r\n                textAlign: \"center\",\r\n              }}\r\n              primary=\"To Unit\"\r\n            />\r\n            <ListItemSecondaryAction onClick={handleChange}>\r\n              <IconButton edge=\"end\" aria-label=\"delete\">\r\n                {view ? <i>e</i> : <b>e</b>}\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ) : (\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ArrowBackIcon\r\n                onClick={((event) => changeResult(event, 0, \"\"), props.goBack)}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              style={{\r\n                color: \"#ee6f57\",\r\n                fontWeight: \"bold\",\r\n                textDecorationLine: \"underline\",\r\n                textAlign: \"center\",\r\n              }}\r\n              primary=\"From Unit\"\r\n            />\r\n            <ListItemSecondaryAction onClick={handleChange}>\r\n              <IconButton edge=\"end\" aria-label=\"e\">\r\n                <ul>{view ? <i>e</i> : <b>e</b>}</ul>\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n        {props.index === 11 ? (\r\n          <ListItem>\r\n            <ListItemText\r\n              style={{ fontStyle: \"italic\" }}\r\n              secondary=\"Data-size units follow the IEC standard, where kibi-, mebi- and gibi- etc are multiples of 1024 and kilo-, mega-, giga- etc are multiples of 1000.\"\r\n            />\r\n          </ListItem>\r\n        ) : null}\r\n        {result\r\n          ? data.map((item) => (\r\n              <ListItem\r\n                button\r\n                autoFocus\r\n                key={item.id}\r\n                // onClick={(event) => changeResult(event, 1, item.id)}\r\n              >\r\n                {item.id === selectedUnit ? (\r\n                  <ListItemIcon style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                    {item.symbol}\r\n                  </ListItemIcon>\r\n                ) : (\r\n                  <ListItemIcon>\r\n                    {item.symbol}\r\n                  </ListItemIcon>\r\n                )}\r\n                <ListItemText\r\n                  \r\n                  style={{ textAlign: \"right\" }}\r\n                  primary={formula(\r\n                    props.index,\r\n                    item.id,\r\n                    props.numberT,\r\n                    selectedUnit,\r\n                    view\r\n                  )}\r\n                  \r\n                />\r\n              </ListItem>\r\n            ))\r\n          : data.map((item) => (\r\n              <ListItem\r\n                autoFocus\r\n                button\r\n                key={item.id}\r\n                onClick={(event) =>  changeResult(event, 1, item.id)}\r\n              >\r\n                <ListItemIcon>{item.symbol}</ListItemIcon>\r\n\r\n                <ListItemText\r\n                  style={{ textAlign: \"right\" }}\r\n                  secondary={item.name}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Units from \"./Units.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 300,\r\n    backgroundColor: \"#f9f7d9\",\r\n    marginTop:15,\r\n    scrollBehavior: true,\r\n  },\r\n}));\r\n\r\nexport default function Conversions(props) {\r\n  const classes = useStyles();\r\n  const [showUnits, showUnitState] = React.useState(\"\");\r\n  const handleListItemClick = (event, index) => {\r\n    // setSelectedIndex(index);\r\n    showUnitState(index);\r\n  };\r\n  const goBack = (event, index) => {\r\n    showUnitState(\"\");\r\n  };\r\n\r\n  return showUnits === \"\" ? (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\">\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 0)}>\r\n          <ListItemIcon>1</ListItemIcon>\r\n          <ListItemText secondary=\"Distance\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 1)}>\r\n          <ListItemIcon>2</ListItemIcon>\r\n          <ListItemText secondary=\"Area\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 2)}>\r\n          <ListItemIcon>3</ListItemIcon>\r\n          <ListItemText secondary=\"Volume\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 3)}>\r\n          <ListItemIcon>4</ListItemIcon>\r\n          <ListItemText secondary=\"Mass\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 4)}>\r\n          <ListItemIcon>5</ListItemIcon>\r\n          <ListItemText secondary=\"Speed\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 5)}>\r\n          <ListItemIcon>6</ListItemIcon>\r\n          <ListItemText secondary=\"Time\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 6)}>\r\n          <ListItemIcon>7</ListItemIcon>\r\n          <ListItemText secondary=\"Force\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 7)}>\r\n          <ListItemIcon>8</ListItemIcon>\r\n          <ListItemText secondary=\"Pressure\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 8)}>\r\n          <ListItemIcon>9</ListItemIcon>\r\n          <ListItemText secondary=\"Energy\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 9)}>\r\n          <ListItemIcon>10</ListItemIcon>\r\n          <ListItemText secondary=\"Power\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 10)}>\r\n          <ListItemIcon>11</ListItemIcon>\r\n          <ListItemText secondary=\"Temperature\" />\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={(event) => handleListItemClick(event, 11)}>\r\n          <ListItemIcon>12</ListItemIcon>\r\n          <ListItemText secondary=\"Data Size\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  ) : (\r\n    <Units numberT={props.number} index={showUnits} goBack={goBack} />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./css/style.scss\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction ErrorScreen() {\r\n  return (\r\n    <Alert style={{ marginTop: 5, width: 270 }} severity=\"warning\">\r\n      ENTER A VALID NUMBER\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorScreen;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/style.scss\";\r\nimport Conversions from \"./Conversions.js\";\r\nimport ErrorScreen from \"./ErrorScreen.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { useSpring, animated } from \"react-spring/web.cjs\"; // web.cjs is required for IE 11 support\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         width: 300,\r\n//     },\r\n//     label: {\r\n//         color: 'white',\r\n//         letterSpacing: 20,\r\n//         textTransform: 'capitalize',\r\n//     }\r\n// });\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#d6e0f0\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nconst StyledTextField = withStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n  // label: {\r\n  //   color: \"white\",\r\n  //   letterSpacing: 20,\r\n  //   textTransform: \"capitalize\",\r\n  // },\r\n})(TextField);\r\n\r\nfunction Home() {\r\n  const [num, setNum] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // const classes = useStyles();\r\n  // alert(num);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <p className=\"heading-text\">CONVERT</p>\r\n        <p className=\"subheading-text\">UNITS ONLY</p>\r\n        <IconButton onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <StyledTextField\r\n          id=\"outlined-textarea\"\r\n          label=\"ENTER A NUMBER\"\r\n          // classes={{\r\n          //     root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n          //     label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          //   }}\r\n          name=\"num\"\r\n          value={num}\r\n          onChange={(e) => setNum(e.target.value.replace(/\\s/g, \"\"))}\r\n          variant=\"outlined\"\r\n        />\r\n        {num === \"\" ? (\r\n          null\r\n        ) : isNaN(num) ? (\r\n          <ErrorScreen />\r\n        ) : (\r\n          <Conversions number={num} />\r\n        )}\r\n      </div>\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h3 id=\"spring-modal-title\">About</h3>\r\n            <p id=\"spring-modal-description\">Made with ♥ by Shuhul Kaul.</p>\r\n            <IconButton target=\"_blank\" href=\"https://github.com/shuhulkaul\">\r\n              <GitHubIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton\r\n              target=\"_blank\"\r\n              href=\"https://www.linkedin.com/in/shuhulkaul22\"\r\n            >\r\n              <LinkedInIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton target=\"_blank\" href=\"https://twitter.com/shuhulkaul_\">\r\n              <TwitterIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./components/Home.js\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}