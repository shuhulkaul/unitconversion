{"version":3,"sources":["logo.svg","components/Conversions.js","components/ErrorScreen.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","marginTop","scrollBehavior","SelectedListItem","classes","React","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index","className","List","component","ListItem","button","selected","onClick","ListItemIcon","ListItemText","secondary","ErrorScreen","Alert","style","severity","modal","display","alignItems","justifyContent","paper","border","boxShadow","shadows","padding","spacing","Fade","forwardRef","props","ref","open","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","StyledTextField","withStyles","label","color","letterSpacing","textTransform","TextField","Home","num","setNum","setOpen","class","IconButton","id","name","value","onChange","e","target","replace","variant","isNaN","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","href","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03938531.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: \"#f9f7d9\",\r\n        marginTop: 5,\r\n        scrollBehavior: true\r\n    },\r\n}));\r\n\r\nexport default function SelectedListItem() {\r\n    const classes = useStyles();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"nav\">\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 0}\r\n                    onClick={(event) => handleListItemClick(event, 0)}\r\n                >\r\n                    <ListItemIcon>\r\n                        1\r\n          </ListItemIcon>\r\n                    <ListItemText secondary=\"Distance\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 1}\r\n                    onClick={(event) => handleListItemClick(event, 1)}\r\n                >\r\n                    <ListItemIcon>\r\n                        2\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Area\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 2}\r\n                    onClick={(event) => handleListItemClick(event, 2)}\r\n                >\r\n                    <ListItemIcon>\r\n                        3\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Volume\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 3}\r\n                    onClick={(event) => handleListItemClick(event, 3)}\r\n                >\r\n                    <ListItemIcon>\r\n                        4\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Mass\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 4}\r\n                    onClick={(event) => handleListItemClick(event, 4)}\r\n                >\r\n                    <ListItemIcon>\r\n                        5\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Speed\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 5}\r\n                    onClick={(event) => handleListItemClick(event, 5)}\r\n                >\r\n                    <ListItemIcon>\r\n                        6\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Time\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 6}\r\n                    onClick={(event) => handleListItemClick(event, 6)}\r\n                >\r\n                    <ListItemIcon>\r\n                        7\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Force\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 7}\r\n                    onClick={(event) => handleListItemClick(event, 7)}\r\n                >\r\n                    <ListItemIcon>\r\n                        8\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Pressure\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 8}\r\n                    onClick={(event) => handleListItemClick(event, 8)}\r\n                >\r\n                    <ListItemIcon>\r\n                        9\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Energy\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 9}\r\n                    onClick={(event) => handleListItemClick(event, 9)}\r\n                >\r\n                    <ListItemIcon>\r\n                        10\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Power\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 10}\r\n                    onClick={(event) => handleListItemClick(event, 10)}\r\n                >\r\n                    <ListItemIcon>\r\n                        11\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Temprature\" />\r\n                </ListItem>\r\n\r\n                <ListItem\r\n                    button\r\n                    selected={selectedIndex === 11}\r\n                    onClick={(event) => handleListItemClick(event, 11)}\r\n                >\r\n                    <ListItemIcon>\r\n                        12\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Data Size\" />\r\n                </ListItem>\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState, Component } from 'react';\r\nimport './css/style.scss';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction ErrorScreen() {\r\n\r\n    return (\r\n        <Alert style={{ marginTop: 5, width: 270 }} severity=\"warning\">ENTER A VALID NUMBER</Alert>\r\n    );\r\n}\r\n\r\n\r\nexport default ErrorScreen;\r\n","import React, { useState, Component } from 'react';\r\nimport './css/style.scss'\r\nimport Conversions from './Conversions.js'\r\nimport ErrorScreen from './ErrorScreen.js'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         width: 300,\r\n//     },\r\n//     label: {\r\n//         color: 'white',\r\n//         letterSpacing: 20,\r\n//         textTransform: 'capitalize',\r\n//     }\r\n// });\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: \"#d6e0f0\",\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nconst StyledTextField = withStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n    label: {\r\n        color: 'white',\r\n        letterSpacing: 20,\r\n        textTransform: 'capitalize',\r\n    }\r\n})(TextField);\r\n\r\nfunction Home() {\r\n    const [num, setNum] = useState('');\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // const classes = useStyles();\r\n    // alert(num);\r\n    return (\r\n\r\n        <div class=\"container\">\r\n            <div class=\"heading\">\r\n                <p class=\"heading-text\">CONVERT</p>\r\n                <p class=\"subheading-text\">UNITS ONLY</p>\r\n                <IconButton onClick={handleOpen}>\r\n                    <InfoIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div class=\"wrapper\">\r\n                <StyledTextField\r\n                    id=\"outlined-textarea\"\r\n                    label=\"ENTER A NUMBER\"\r\n                    // classes={{\r\n                    //     root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                    //     label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                    //   }}\r\n                    name=\"num\"\r\n                    value={num}\r\n                    onChange={e => setNum(e.target.value.replace(/\\s/g, ''))}\r\n                    variant=\"outlined\"\r\n                />\r\n                {num === '' ? <h1></h1> : isNaN(num) ? <ErrorScreen /> : <Conversions />}\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"spring-modal-title\"\r\n                aria-describedby=\"spring-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h3 id=\"spring-modal-title\">About</h3>\r\n                        <p id=\"spring-modal-description\">Developed by Shuhul Kaul.</p>\r\n                        <IconButton target=\"_blank\" href=\"https://github.com/shuhulkaul\"><GitHubIcon fontSize='small'/></IconButton>\r\n                        <IconButton target=\"_blank\" href=\"https://www.linkedin.com/in/shuhulkaul22\"><LinkedInIcon fontSize='small'/></IconButton>\r\n                        <IconButton target=\"_blank\" href=\"https://twitter.com/shuhulkaul_\"><TwitterIcon fontSize='small'/></IconButton>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home.js'\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}